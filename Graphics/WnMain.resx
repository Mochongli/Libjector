<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Refresher.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>